#!/usr/bin/env ruby
#
# Renders the results from the run script as a Markdown table.

require "json"

# Returns a time (in milliseconds) in an easy-to-read representation.
def show_time(time)
  if time < 0.001
    "`%d` ns" % (time * 1_000_000)
  elsif time < 1
    "`%d` Î¼s" % (time * 1_000)
  elsif time > 100
    "`%d` ms" % time
  else
    "`%.2f` ms" % time
  end
end

ITEMS = ARGF.each_line.map {|l| JSON.parse(l) }

%w(AVG MAX MIN).map do |stat_key|

  puts "**#{stat_key.capitalize}.**"

  puts "| N. Files | `std` | `syscall` | `std` / `syscall` |"
  puts "|-:|-:|-:|-:|"

  ITEMS.each do |item|
    print "| #{ item["no_files"] } "

    values = []
    %w(std syscall).each do |conf|
      time = item.dig(conf, stat_key).to_f
      print "| #{show_time(time)} <!-- #{ time } -->"

      values << time
    end

    relative = values[0] / values[1]
    puts " | `%.2f` |" % relative
  end

end
